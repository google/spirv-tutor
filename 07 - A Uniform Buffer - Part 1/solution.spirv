      OpCapability Shader
      OpMemoryModel Logical GLSL450

      OpEntryPoint Vertex %3 "main" %8 %10 %12

      OpName %8 "fancy_attribute"
      OpName %10 "useful_output"
      OpName %12 "crucial_data"
      OpName %14 "object_properties"
      OpMemberName %14 0 "shininess"
      OpMemberName %14 1 "smoothness"
      OpName %16 "props"

      OpDecorate %8 Location 0
      OpDecorate %10 Location 0
      OpDecorate %12 Location 1

; Make the struct definition a uniform buffer, and specify its memory layout
      OpDecorate %14 Block
      OpMemberDecorate %14 0 Offset 0
      OpMemberDecorate %14 1 Offset 16

; Assign set/binding decorations to the uniform buffer variable
      OpDecorate %16 DescriptorSet 2
      OpDecorate %16 Binding 3

; the `float` type
 %5 = OpTypeFloat 32

; the `vec4` type
 %6 = OpTypeVector %5 4

; the `{vec4, vec4}` struct type
 %14 = OpTypeStruct %6 %6

; in float fancy_attribute;
 %7 = OpTypePointer Input %5
 %8 = OpVariable %7 Input

; out float useful_output;
 %9 = OpTypePointer Output %5
%10 = OpVariable %9 Output

; out vec4 crucial_data;
%11 = OpTypePointer Output %6
%12 = OpVariable %11 Output

; uniform object_properties { ... } props;
%15 = OpTypePointer Uniform %14
%16 = OpVariable %15 Uniform

 %1 = OpTypeVoid
 %2 = OpTypeFunction %1
 %3 = OpFunction %1 None %2
 %4 = OpLabel

      ; useful_output = fancy_attribute;
      %13 = OpLoad %5 %8
            OpStore %10 %13

      OpReturn
      OpFunctionEnd
