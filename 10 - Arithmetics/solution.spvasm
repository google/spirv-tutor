      OpCapability Shader
      OpMemoryModel Logical GLSL450

      OpEntryPoint Fragment %3 "main" %10 %12 %14
      OpExecutionMode %3 OriginUpperLeft

      OpName %10 "fancy_varying"
      OpName %12 "beautiful_color"
      OpName %14 "physicsy_properties"
      OpName %7 "object_properties"
      OpMemberName %7 0 "shininess"
      OpMemberName %7 1 "smoothness"
      OpName %16 "props"

      OpDecorate %10 Location 0
      OpDecorate %12 Location 0
      OpDecorate %14 Location 1

; Make the struct definition a uniform buffer, and specify its memory layout
      OpDecorate %7 Block
      OpMemberDecorate %7 0 Offset 0
      OpMemberDecorate %7 1 Offset 16

; Assign set/binding decorations to the uniform buffer variable
      OpDecorate %16 DescriptorSet 2
      OpDecorate %16 Binding 3

; the `float` type
 %5 = OpTypeFloat 32

; the `vec4` type
 %6 = OpTypeVector %5 4

; the `{vec4, vec4}` struct type
 %7 = OpTypeStruct %6 %6

; the `int` type
 %8 = OpTypeInt 32 1

; in float fancy_varying;
 %9 = OpTypePointer Input %6
%10 = OpVariable %9 Input

; out float beautiful_color;
%11 = OpTypePointer Output %6
%12 = OpVariable %11 Output

; out vec4 physicsy_properties;
%13 = OpTypePointer Output %6
%14 = OpVariable %13 Output

; uniform object_properties { ... } props;
%15 = OpTypePointer Uniform %7
%16 = OpVariable %15 Uniform

; Uniform pointer to `vec4`
%17 = OpTypePointer Uniform %6

; The integer constants 0 and 1
%18 = OpConstant %8 0
%19 = OpConstant %8 1

; The constants 1.0 and vec4(1.0)
%20 = OpConstant %5 1.0
%21 = OpConstantComposite %6 %20 %20 %20 %20

 %1 = OpTypeVoid
 %2 = OpTypeFunction %1
 %3 = OpFunction %1 None %2
 %4 = OpLabel

      ; load fancy_varying
      %22 = OpLoad %6 %10

      ; load props.shininess
      %23 = OpAccessChain %17 %16 %18
      %24 = OpLoad %6 %23

      ; load props.smoothness
      %25 = OpAccessChain %17 %16 %19
      %26 = OpLoad %6 %25

      ; vec4(1) - props.shininess
      %27 = OpFSub %6 %21 %24

      ; fancy_varying * (vec4(1) - props.shininess)
      %28 = OpFMul %6 %22 %27

      ; beautiful_color = fancy_varying * (vec4(1) - props.shininess);
            OpStore %12 %28

      ; -props.smoothness
      %29 = OpFNegate %6 %26

      ; -props.smoothness / props.shininess
      %30 = OpFDiv %6 %29 %24

      ; physicsy_properties = -props.smoothness / props.shininess;
            OpStore %14 %30

      OpReturn
      OpFunctionEnd
