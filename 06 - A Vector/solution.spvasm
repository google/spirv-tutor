      OpCapability Shader
      OpMemoryModel Logical GLSL450

; The shader uses fancy_attribute, useful_output and crucial_data
      OpEntryPoint Vertex %3 "main" %7 %9 %13

      OpName %7 "fancy_attribute"
      OpName %9 "useful_output"
      OpName %13 "crucial_data"

      OpDecorate %7 Location 0
      OpDecorate %9 Location 0
      OpDecorate %13 Location 1

; the `float` type
 %5 = OpTypeFloat 32

; the `vec4` type
%11 = OpTypeVector %5 4

; in float fancy_attribute;
 %6 = OpTypePointer Input %5
 %7 = OpVariable %6 Input

; out float useful_output;
 %8 = OpTypePointer Output %5
 %9 = OpVariable %8 Output

; out vec4 crucial_data;
%12 = OpTypePointer Output %11
%13 = OpVariable %12 Output

; Constants 0.25, 0.75 and 1.0
%14 = OpConstant %5 0.25
%15 = OpConstant %5 0.75
%16 = OpConstant %5 1

; Constant vec4(0.25, 0.25, 0.75, 1.0)
%17 = OpConstantComposite %11 %14 %14 %15 %16

 %1 = OpTypeVoid
 %2 = OpTypeFunction %1
 %3 = OpFunction %1 None %2
 %4 = OpLabel

      ; useful_output = fancy_attribute;
      %10 = OpLoad %5 %7
            OpStore %9 %10

      ; crucial_data = vec4(0.25, 0.25, 0.75, 1.0);
            OpStore %13 %17

      OpReturn
      OpFunctionEnd
